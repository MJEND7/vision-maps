                {/* Unified Input/Textarea at bottom */}
                <motion.div
                    className="relative"
                    animate={{
                        height: isTextMode || isAiMode || mediaItem || linkMeta || isLoadingLinkMeta ? "120px" : "44px"
                    }}
                    transition={{
                        type: "spring",
                        stiffness: 300,
                        damping: 30,
                        mass: 0.8
                    }}
                >
                    <Input
                        ref={fileInputRef}
                        type="file"
                        className="hidden"
                        onChange={(e) => e.target.files?.[0] && handleFileSelect(e.target.files[0])}
                        multiple={false}
                    />

                    <motion.div className="relative w-full h-full">
                        <Textarea
                            ref={textareaRef}
                            className={`w-full h-full resize-none transition-all duration-200 ${
                                isTextMode || isAiMode || mediaItem || linkMeta || isLoadingLinkMeta
                                    ? "pr-24 rounded-xl shadow-sm hover:shadow-lg focus:shadow-lg py-3 px-4"
                                    : "pr-16 rounded-2xl shadow-sm hover:shadow-lg focus:shadow-lg py-0 px-4 overflow-hidden"
                            }`}
                            style={{
                                lineHeight: isTextMode || isAiMode || mediaItem || linkMeta || isLoadingLinkMeta ? "1.5" : "44px",
                                minHeight: "44px"
                            }}
                            placeholder={
                                isTextMode || isAiMode || mediaItem || linkMeta || isLoadingLinkMeta
                                    ? `Enter a thought about: "${getDisplayName()}" ?`
                                    : "Enter Media and Create a Node"
                            }
                            value={isTextMode || isAiMode ? thought : inputValue}
                            onChange={(e) => {
                                if (isTextMode || isAiMode) {
                                    updateThought(e.target.value);
                                } else {
                                    handleInputChange(e);
                                }
                            }}
                            onKeyDown={async (e) => {
                                if (e.key === "Enter" && !e.shiftKey) {
                                    e.preventDefault();
                                    if (isAiMode && chatId) {
                                        handleSendMessage(chatId);
                                    } else if (isTextMode) {
                                        handleCreate();
                                    } else {
                                        handleInputKeyDown(e);
                                    }
                                }
                            }}
                            onPaste={!isTextMode && !isAiMode ? handlePaste : undefined}
                        />

                        <AnimatePresence>
                            {/* Compact mode buttons */}
                            {!isTextMode && !isAiMode && !mediaItem && !linkMeta && !isLoadingLinkMeta && (
                                <motion.div
                                    className="absolute right-3 top-1/2 -translate-y-1/2"
                                    initial={{ opacity: 1, scale: 1 }}
                                    exit={{ opacity: 0, scale: 0.8 }}
                                    transition={{ duration: 0.2 }}
                                >
                                    <Button
                                        variant="outline"
                                        size="sm"
                                        className="h-8 rounded-xl px-2 text-xs border-border/50 hover:border-border transition-colors"
                                        onClick={() => fileInputRef.current?.click()}
                                    >
                                        <FileText size={12} />
                                    </Button>
                                </motion.div>
                            )}

                            {/* Expanded mode buttons */}
                            {(isTextMode || isAiMode || mediaItem || linkMeta || isLoadingLinkMeta) && (
                                <motion.div
                                    className="absolute right-2 bottom-2 flex gap-2"
                                    initial={{ opacity: 0, y: 10, scale: 0.8 }}
                                    animate={{ opacity: 1, y: 0, scale: 1 }}
                                    exit={{ opacity: 0, scale: 0.8 }}
                                    transition={{
                                        type: "spring",
                                        stiffness: 400,
                                        damping: 25
                                    }}
                                >
                                    {/* File button in expanded mode */}
                                    {!mediaItem && !linkMeta && !isLoadingLinkMeta && (
                                        <motion.div
                                            initial={{ x: 40, opacity: 0 }}
                                            animate={{ x: 0, opacity: 1 }}
                                            exit={{ x: 40, opacity: 0 }}
                                            transition={{ delay: 0.05 }}
                                        >
                                            <Button
                                                variant="ghost"
                                                size="sm"
                                                onClick={() => fileInputRef.current?.click()}
                                                className="h-8 w-8 p-0 rounded-lg hover:bg-gray-100 text-gray-500 hover:text-gray-700 transition-colors"
                                            >
                                                <FileText size={14} />
                                            </Button>
                                        </motion.div>
                                    )}

                                    {/* AI button for text mode */}
                                    {isTextMode && !isAiMode && (
                                        <motion.div
                                            initial={{ x: 40, opacity: 0 }}
                                            animate={{ x: 0, opacity: 1 }}
                                            exit={{ x: 40, opacity: 0 }}
                                            transition={{ delay: 0.08 }}
                                        >
                                            <Button
                                                variant="ghost"
                                                size="sm"
                                                onClick={handleToggleAiMode}
                                                className="h-8 w-8 p-0 rounded-lg hover:bg-purple-50 hover:text-purple-600 transition-colors"
                                            >
                                                <Brain size={14} />
                                            </Button>
                                        </motion.div>
                                    )}

                                    {/* Close button */}
                                    {(isTextMode && !isAiMode) || mediaItem || linkMeta ? (
                                        <motion.div
                                            initial={{ x: 40, opacity: 0 }}
                                            animate={{ x: 0, opacity: 1 }}
                                            exit={{ x: 40, opacity: 0 }}
                                            transition={{ delay: 0.1 }}
                                        >
                                            <Button
                                                variant="ghost"
                                                size="sm"
                                                onClick={() => { clearMedia() }}
                                                className="h-8 w-8 p-0 rounded-lg hover:bg-red-50 hover:text-red-600 transition-colors"
                                            >
                                                <X size={14} />
                                            </Button>
                                        </motion.div>
                                    ) : null}

                                    {/* Main action button */}
                                    <motion.div
                                        initial={{ x: 30, opacity: 0 }}
                                        animate={{ x: 0, opacity: 1 }}
                                        exit={{ x: 30, opacity: 0 }}
                                        transition={{ delay: 0.15 }}
                                    >
                                        <Button
                                            size="sm"
                                            onClick={async () => {
                                                if (isAiMode && chatId) {
                                                    handleSendMessage(chatId);
                                                } else {
                                                    handleCreate();
                                                }
                                            }}
                                            disabled={
                                                (!isTextMode || isUploading) &&
                                                !isValidForCreation()
                                            }
                                            className="h-8 px-3 rounded-lg bg-primary hover:bg-primary/90 text-primary-foreground disabled:opacity-50 transition-all duration-200"
                                        >
                                            <Send size={12} />
                                            {isAiMode ? "Send" : "Create"}
                                        </Button>
                                    </motion.div>
                                </motion.div>
                            )}
                        </AnimatePresence>
                    </motion.div>
                </motion.div>