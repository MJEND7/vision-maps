"use client";

import { motion, AnimatePresence } from "motion/react"
import { useState, useEffect } from "react"
import LandingNav from "@/components/landing/LandingNav";
import LandingFooter from "@/components/landing/LandingFooter";
import { Button } from "@/components/ui/button";
import { CheckCircle, Zap, Users, Palette, Video, Globe, Upload, ChevronLeft, ChevronRight } from "lucide-react";
import { Accordion } from "@/components/ui/accordion";
import { SignedIn } from '@clerk/nextjs';
import { CheckoutButton, usePlans } from '@clerk/nextjs/experimental'
import WastedTimeTimer from "@/components/WastedTimeTimer";
import { Authenticated, Unauthenticated } from "convex/react";
import { useRouter } from "next/navigation";
import { AppRouterInstance } from "next/dist/shared/lib/app-router-context.shared-runtime";

export default function Home() {
    const router = useRouter();

    return (
        <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 0.5 }}
        >
            <motion.div className="sm:hidden absolute inline left-10 top-175 rotate-20">
                <div className="relative">
                    <motion.p className="text-2xl text-[#507FF8]/80 absolute top-1 -left-4.5 font-gaegu font-bold -rotate-15">
                        Communicate your vision
                        <span className="absolute">
                            <svg className="fill-[#507FF8]/80" width="20" height="20" viewBox="0 0 80 80" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path fillRule="evenodd" clipRule="evenodd" d="M35.6079 30.0564C28.1818 23.952 22.1645 16.6825 17.6428 8.21291C16.7384 6.52595 14.6341 5.88246 12.9298 6.78681C11.2428 7.69115 10.5992 9.79554 11.5036 11.4999C16.4775 20.7695 23.0515 28.7347 31.1907 35.4303C32.6689 36.6477 34.8775 36.439 36.0949 34.9607C37.3123 33.4651 37.0862 31.2738 35.6079 30.0564Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M31.6476 6.28254C32.0302 13.3086 32.3781 20.3347 32.8129 27.3608C32.9347 29.2738 34.5868 30.7347 36.4999 30.613C38.4129 30.4912 39.8738 28.8391 39.752 26.926C39.3173 19.9173 38.9694 12.9087 38.5867 5.88257C38.4824 3.97474 36.8303 2.50517 34.9172 2.613C33.0042 2.72082 31.5259 4.36428 31.6476 6.28254Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M57.4667 7.70873C53.0146 14.4218 47.9713 20.613 42.893 26.8739C41.6756 28.3695 41.9016 30.5609 43.3972 31.7609C44.8929 32.9783 47.0843 32.7522 48.2843 31.2565C53.5017 24.8391 58.6843 18.4565 63.2756 11.5521C64.3365 9.95214 63.8842 7.79569 62.2842 6.73483C60.7016 5.67396 58.5276 6.10873 57.4667 7.70873Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M74.7131 32.6652C62.6435 33.2043 49.8261 33.2217 37.7565 32.4565C35.8435 32.3521 34.1913 33.7956 34.0696 35.7261C33.9478 37.6391 35.4087 39.2913 37.3218 39.413C49.6348 40.1782 62.7132 40.1608 75.0262 39.6217C76.9392 39.5347 78.4347 37.9 78.3478 35.987C78.2608 34.0739 76.6261 32.5782 74.7131 32.6652Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M31.1812 34.8737C38.6247 43.9867 46.3291 52.9259 53.2335 62.4563C54.3639 64.0042 56.5379 64.3519 58.1031 63.2215C59.6509 62.091 59.9987 59.917 58.8682 58.3692C51.8769 48.7344 44.0857 39.691 36.5553 30.4736C35.3379 28.9953 33.1465 28.7693 31.6682 29.9867C30.1726 31.2041 29.9638 33.3954 31.1812 34.8737Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M33.4355 37.5179C35.3833 47.0136 35.9225 56.0919 36.0616 65.7093C36.079 67.6223 37.6616 69.1527 39.5747 69.1353C41.5051 69.1005 43.0355 67.5353 43.0007 65.6048C42.8616 55.5353 42.2877 46.0571 40.2529 36.1092C39.8529 34.231 38.0269 33.0135 36.1312 33.4135C34.253 33.7961 33.0355 35.6397 33.4355 37.5179Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M33.7495 36.7531C28.1147 48.0226 25.2103 60.5444 19.1756 71.5705C18.2538 73.2401 18.8798 75.3617 20.5667 76.2835C22.2537 77.2052 24.3582 76.5791 25.2799 74.9095C31.3495 63.8138 34.2885 51.2226 39.9755 39.8661C40.8277 38.1443 40.132 36.0574 38.4276 35.1878C36.7059 34.3356 34.619 35.0313 33.7495 36.7531Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M36.8506 34.1956C25.6332 36.1782 14.4332 37.0825 3.14621 38.4217C1.23317 38.6477 -0.123351 40.3695 0.102736 42.2826C0.328823 44.1956 2.05072 45.5521 3.96377 45.3261C15.3725 43.9869 26.7116 43.0478 38.0681 41.0478C39.9463 40.6999 41.2159 38.8912 40.8855 37.013C40.5376 35.1173 38.7462 33.8478 36.8506 34.1956Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M44.6564 28.9096C42.3433 28.8053 40.152 28.6487 37.8911 28.3182C35.9781 28.04 34.2215 29.3617 33.9433 31.2574C33.665 33.153 34.9866 34.927 36.8823 35.2052C39.3866 35.5705 41.8041 35.7444 44.3432 35.8487C46.2563 35.9357 47.891 34.4574 47.9605 32.5269C48.0475 30.6139 46.5694 28.9966 44.6564 28.9096Z" />
                            </svg>
                        </span>
                    </motion.p>
                    <motion.span>
                        <svg className="fill-[#507FF8]/80" width="310" height="100" viewBox="0 0 310 100" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fillRule="evenodd" clipRule="evenodd" d="M184.059 42.102C143.9 52.1272 104.061 63.5928 64.7754 76.5239C46.0979 82.6721 23.9105 87.7131 6.73874 97.6565C5.88377 98.1547 6.2582 98.953 6.29804 99.0323C6.37866 99.1948 6.6817 99.727 7.42217 99.5811C7.50289 99.5662 8.04625 99.353 8.25498 99.274C13.5444 97.2606 18.7855 95.132 24.0884 93.1576C42.395 86.3328 60.8938 80.0707 79.4727 74.0219C104.132 65.992 129.236 58.8788 154.249 52.0405C167.941 48.2984 182.224 45.5777 195.841 41.3213C200.919 40.0886 206.003 38.88 211.092 37.6913C232.368 32.7311 253.793 28.5085 275.277 24.5887C282.185 23.328 287.481 22.4789 294.223 21.1562C296.783 20.6552 300.823 19.7699 303.634 19.1506C304.046 19.0612 305.097 18.8207 305.533 18.7217C305.578 18.7193 305.622 18.7089 305.67 18.6975C305.838 18.6578 305.915 18.6269 305.931 18.6232C306.847 18.2583 306.546 17.3793 306.49 17.249C306.479 17.2219 306.155 16.496 305.331 16.6617C305.134 16.7 303.732 17.0238 303.192 17.1433C300.397 17.7589 296.373 18.6404 293.826 19.1426C287.096 20.4624 281.804 21.3106 274.908 22.5685C253.392 26.4959 231.934 30.722 210.626 35.6897C208.024 36.2978 205.419 36.9108 202.819 37.5308C202.678 37.3237 202.421 37.114 201.964 37.1041C201.537 37.0955 198.631 37.6867 197.497 37.8583C189.1 39.1296 189.351 39.1039 180.158 40.6948C166.234 43.1022 164.099 43.4053 149.74 46.431C123.659 51.9257 97.7314 58.1231 71.8147 64.3306C59.0208 67.3996 45.5186 71.515 32.137 72.9746C36.301 71.4559 40.5133 70.0694 44.7052 68.6328C59.019 63.7296 73.4736 59.3674 88.0386 55.2579C122.977 45.4011 158.184 36.4309 193.947 30.1123C186.455 31.9634 178.988 33.9096 171.504 35.7968C141.04 43.4871 110.095 50.4635 80.1388 60.0143C79.6028 60.1878 79.3058 60.765 79.4755 61.3034C79.6461 61.8459 80.2262 62.1435 80.7632 61.9741C110.679 52.4327 141.581 45.4706 172.006 37.7898C183.31 34.9386 194.578 31.9565 205.942 29.3572C209.842 28.467 213.768 27.6889 217.672 26.8147C218.445 26.6443 220.463 26.3267 220.731 26.1956C221.324 25.9073 221.35 25.4112 221.336 25.1738C221.323 25.0331 221.202 24.2341 220.178 24.1809C213.192 23.817 201.157 26.7613 194.718 27.8895C158.501 34.2312 122.854 43.3013 87.4811 53.2781C72.8812 57.4001 58.3916 61.7748 44.0389 66.6914C39.0244 68.4074 33.9818 70.0582 29.0261 71.9334C28.2261 72.237 26.4085 72.8323 25.55 73.2089C25.1912 73.3657 24.9427 73.5259 24.8392 73.6222C24.4351 73.9967 24.4423 74.4005 24.5039 74.6604C24.5473 74.8614 24.7978 75.5454 25.8204 75.5059C41.4013 74.9022 57.3298 69.9164 72.2924 66.3293C98.1932 60.1256 124.101 53.9329 150.166 48.442C164.489 45.4247 166.615 45.1196 180.511 42.7188C181.882 42.4784 183.044 42.2792 184.059 42.102Z" />
                        </svg>
                    </motion.span>
                </div>
            </motion.div>

            <motion.div className="sm:inline absolute hidden left-25 top-50">
                <div className="relative">
                    <motion.p className="text-3xl text-[#507FF8]/80 absolute top-1 -left-4.5 font-gaegu font-bold -rotate-15">
                        Communicate your vision
                        <span className="absolute">
                            <svg className="fill-[#507FF8]/80" width="20" height="20" viewBox="0 0 80 80" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path fillRule="evenodd" clipRule="evenodd" d="M35.6079 30.0564C28.1818 23.952 22.1645 16.6825 17.6428 8.21291C16.7384 6.52595 14.6341 5.88246 12.9298 6.78681C11.2428 7.69115 10.5992 9.79554 11.5036 11.4999C16.4775 20.7695 23.0515 28.7347 31.1907 35.4303C32.6689 36.6477 34.8775 36.439 36.0949 34.9607C37.3123 33.4651 37.0862 31.2738 35.6079 30.0564Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M31.6476 6.28254C32.0302 13.3086 32.3781 20.3347 32.8129 27.3608C32.9347 29.2738 34.5868 30.7347 36.4999 30.613C38.4129 30.4912 39.8738 28.8391 39.752 26.926C39.3173 19.9173 38.9694 12.9087 38.5867 5.88257C38.4824 3.97474 36.8303 2.50517 34.9172 2.613C33.0042 2.72082 31.5259 4.36428 31.6476 6.28254Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M57.4667 7.70873C53.0146 14.4218 47.9713 20.613 42.893 26.8739C41.6756 28.3695 41.9016 30.5609 43.3972 31.7609C44.8929 32.9783 47.0843 32.7522 48.2843 31.2565C53.5017 24.8391 58.6843 18.4565 63.2756 11.5521C64.3365 9.95214 63.8842 7.79569 62.2842 6.73483C60.7016 5.67396 58.5276 6.10873 57.4667 7.70873Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M74.7131 32.6652C62.6435 33.2043 49.8261 33.2217 37.7565 32.4565C35.8435 32.3521 34.1913 33.7956 34.0696 35.7261C33.9478 37.6391 35.4087 39.2913 37.3218 39.413C49.6348 40.1782 62.7132 40.1608 75.0262 39.6217C76.9392 39.5347 78.4347 37.9 78.3478 35.987C78.2608 34.0739 76.6261 32.5782 74.7131 32.6652Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M31.1812 34.8737C38.6247 43.9867 46.3291 52.9259 53.2335 62.4563C54.3639 64.0042 56.5379 64.3519 58.1031 63.2215C59.6509 62.091 59.9987 59.917 58.8682 58.3692C51.8769 48.7344 44.0857 39.691 36.5553 30.4736C35.3379 28.9953 33.1465 28.7693 31.6682 29.9867C30.1726 31.2041 29.9638 33.3954 31.1812 34.8737Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M33.4355 37.5179C35.3833 47.0136 35.9225 56.0919 36.0616 65.7093C36.079 67.6223 37.6616 69.1527 39.5747 69.1353C41.5051 69.1005 43.0355 67.5353 43.0007 65.6048C42.8616 55.5353 42.2877 46.0571 40.2529 36.1092C39.8529 34.231 38.0269 33.0135 36.1312 33.4135C34.253 33.7961 33.0355 35.6397 33.4355 37.5179Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M33.7495 36.7531C28.1147 48.0226 25.2103 60.5444 19.1756 71.5705C18.2538 73.2401 18.8798 75.3617 20.5667 76.2835C22.2537 77.2052 24.3582 76.5791 25.2799 74.9095C31.3495 63.8138 34.2885 51.2226 39.9755 39.8661C40.8277 38.1443 40.132 36.0574 38.4276 35.1878C36.7059 34.3356 34.619 35.0313 33.7495 36.7531Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M36.8506 34.1956C25.6332 36.1782 14.4332 37.0825 3.14621 38.4217C1.23317 38.6477 -0.123351 40.3695 0.102736 42.2826C0.328823 44.1956 2.05072 45.5521 3.96377 45.3261C15.3725 43.9869 26.7116 43.0478 38.0681 41.0478C39.9463 40.6999 41.2159 38.8912 40.8855 37.013C40.5376 35.1173 38.7462 33.8478 36.8506 34.1956Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M44.6564 28.9096C42.3433 28.8053 40.152 28.6487 37.8911 28.3182C35.9781 28.04 34.2215 29.3617 33.9433 31.2574C33.665 33.153 34.9866 34.927 36.8823 35.2052C39.3866 35.5705 41.8041 35.7444 44.3432 35.8487C46.2563 35.9357 47.891 34.4574 47.9605 32.5269C48.0475 30.6139 46.5694 28.9966 44.6564 28.9096Z" />
                            </svg>
                        </span>
                    </motion.p>
                    <motion.span>
                        <svg className="fill-[#507FF8]/80" width="310" height="100" viewBox="0 0 310 100" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fillRule="evenodd" clipRule="evenodd" d="M184.059 42.102C143.9 52.1272 104.061 63.5928 64.7754 76.5239C46.0979 82.6721 23.9105 87.7131 6.73874 97.6565C5.88377 98.1547 6.2582 98.953 6.29804 99.0323C6.37866 99.1948 6.6817 99.727 7.42217 99.5811C7.50289 99.5662 8.04625 99.353 8.25498 99.274C13.5444 97.2606 18.7855 95.132 24.0884 93.1576C42.395 86.3328 60.8938 80.0707 79.4727 74.0219C104.132 65.992 129.236 58.8788 154.249 52.0405C167.941 48.2984 182.224 45.5777 195.841 41.3213C200.919 40.0886 206.003 38.88 211.092 37.6913C232.368 32.7311 253.793 28.5085 275.277 24.5887C282.185 23.328 287.481 22.4789 294.223 21.1562C296.783 20.6552 300.823 19.7699 303.634 19.1506C304.046 19.0612 305.097 18.8207 305.533 18.7217C305.578 18.7193 305.622 18.7089 305.67 18.6975C305.838 18.6578 305.915 18.6269 305.931 18.6232C306.847 18.2583 306.546 17.3793 306.49 17.249C306.479 17.2219 306.155 16.496 305.331 16.6617C305.134 16.7 303.732 17.0238 303.192 17.1433C300.397 17.7589 296.373 18.6404 293.826 19.1426C287.096 20.4624 281.804 21.3106 274.908 22.5685C253.392 26.4959 231.934 30.722 210.626 35.6897C208.024 36.2978 205.419 36.9108 202.819 37.5308C202.678 37.3237 202.421 37.114 201.964 37.1041C201.537 37.0955 198.631 37.6867 197.497 37.8583C189.1 39.1296 189.351 39.1039 180.158 40.6948C166.234 43.1022 164.099 43.4053 149.74 46.431C123.659 51.9257 97.7314 58.1231 71.8147 64.3306C59.0208 67.3996 45.5186 71.515 32.137 72.9746C36.301 71.4559 40.5133 70.0694 44.7052 68.6328C59.019 63.7296 73.4736 59.3674 88.0386 55.2579C122.977 45.4011 158.184 36.4309 193.947 30.1123C186.455 31.9634 178.988 33.9096 171.504 35.7968C141.04 43.4871 110.095 50.4635 80.1388 60.0143C79.6028 60.1878 79.3058 60.765 79.4755 61.3034C79.6461 61.8459 80.2262 62.1435 80.7632 61.9741C110.679 52.4327 141.581 45.4706 172.006 37.7898C183.31 34.9386 194.578 31.9565 205.942 29.3572C209.842 28.467 213.768 27.6889 217.672 26.8147C218.445 26.6443 220.463 26.3267 220.731 26.1956C221.324 25.9073 221.35 25.4112 221.336 25.1738C221.323 25.0331 221.202 24.2341 220.178 24.1809C213.192 23.817 201.157 26.7613 194.718 27.8895C158.501 34.2312 122.854 43.3013 87.4811 53.2781C72.8812 57.4001 58.3916 61.7748 44.0389 66.6914C39.0244 68.4074 33.9818 70.0582 29.0261 71.9334C28.2261 72.237 26.4085 72.8323 25.55 73.2089C25.1912 73.3657 24.9427 73.5259 24.8392 73.6222C24.4351 73.9967 24.4423 74.4005 24.5039 74.6604C24.5473 74.8614 24.7978 75.5454 25.8204 75.5059C41.4013 74.9022 57.3298 69.9164 72.2924 66.3293C98.1932 60.1256 124.101 53.9329 150.166 48.442C164.489 45.4247 166.615 45.1196 180.511 42.7188C181.882 42.4784 183.044 42.2792 184.059 42.102Z" />
                        </svg>
                    </motion.span>
                </div>
            </motion.div>
            <motion.div className="sm:inline absolute hidden right-105 top-170">
                <div className="relative">
                    <motion.p className="text-3xl text-center text-[#FFA9D9] absolute top-1 -left-4.5 font-gaegu font-bold -rotate-5">
                        <span className="absolute left-5 -top-2">
                            <svg className="fill-[#FFA9D9] " width="30" height="30" viewBox="0 0 80 80" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path fillRule="evenodd" clipRule="evenodd" d="M22.4259 68.5278C16.0259 66.7318 9.32534 65.8258 2.82534 64.9958C1.42534 64.8218 0.125535 65.7928 0.0255346 67.1608C-0.174465 68.5298 0.826121 69.7818 2.12612 69.9557C8.42612 70.7548 14.9255 71.6097 21.0255 73.3387C22.3255 73.7137 23.7261 72.9418 24.1261 71.6138C24.5261 70.2868 23.7259 68.9038 22.4259 68.5278Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M41.8251 43.0648C31.5251 32.5538 19.9251 23.3958 9.8251 12.6028C8.9251 11.5948 7.3251 11.5408 6.3251 12.4818C5.3251 13.4238 5.22549 15.0078 6.22549 16.0158C16.3255 26.8398 27.9255 36.0278 38.2255 46.5698C39.2255 47.5538 40.8251 47.5678 41.8251 46.5998C42.7251 45.6328 42.8251 44.0488 41.8251 43.0648Z" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M61.1264 2.63576C61.4264 8.65176 61.7259 14.6678 62.0259 20.6848C62.0259 22.0628 63.2264 23.1268 64.6264 23.0598C66.0264 22.9918 67.0259 21.8188 67.0259 20.4398C66.7259 14.4138 66.4264 8.38876 66.1264 2.36376C66.0264 0.985757 64.8262 -0.0712432 63.4262 0.00375683C62.1262 0.0787568 61.0264 1.25876 61.1264 2.63576Z" />
                            </svg>
                        </span>
                        The place to ideate, store relative media, and map!
                        <svg className="fill-[#FFA9D9]" width="400" height="42" viewBox="0 0 666 42" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M220.475 4.24483C147.138 3.4005 73.5014 6.48612 2.51671 19.4427C1.25022 19.6729 0.724462 20.1258 0.62084 20.2294C0.0144608 20.8435 -0.0508949 21.4959 0.0258619 22.0332C0.071916 22.3594 0.382916 23.7372 2.08308 23.8792C3.25746 23.9751 11.5931 23.3035 14.8092 23.1308C29.9495 22.321 45.0593 21.1659 60.1612 19.8303C94.4024 16.8138 128.597 14.204 162.892 11.8284C182.147 10.4928 201.409 9.3875 220.66 8.48177C266.971 9.02291 313.167 11.1338 358.5 13.3136C340.481 14.4228 323.925 15.5473 310.197 16.2765C287.047 17.5046 263.939 18.9552 240.835 20.8665C228.965 21.8451 217.11 22.9083 205.262 24.1632C203.95 24.3052 200.96 24.4511 199.513 24.6238C198.899 24.6928 198.454 24.8042 198.254 24.8809C197.003 25.3645 196.846 26.3546 196.831 26.8535C196.823 27.1567 196.926 28.8108 199.037 29.1332C297.182 44.262 399.576 26.6617 498.074 41.3683C499.229 41.541 500.312 40.7427 500.484 39.5837C500.657 38.4285 499.859 37.3462 498.7 37.1735C405.932 23.3227 309.705 38.133 216.818 27.2604C224.935 26.4736 233.056 25.7636 241.184 25.092C264.246 23.1846 287.311 21.7377 310.423 20.5096C333.68 19.2777 365.12 16.8713 398.029 15.3554C426.272 16.9289 454.499 18.6943 482.746 20.191C494.662 20.8204 506.583 21.3424 518.495 21.9833C523.393 22.2443 535.992 23.3381 537.819 22.9313C539.239 22.6127 539.58 21.5957 539.665 21.0853C539.753 20.5326 539.699 19.8456 539.055 19.1894C538.855 18.9821 538.257 18.5523 537.028 18.1992C503.812 8.6852 449.422 8.83487 398.482 11.1337C387.525 10.5197 376.568 9.93633 365.607 9.41055C340.516 8.20163 315.147 6.98885 289.633 6.03323C361.535 4.25631 433.472 4.76676 505.427 6.05243C535.639 6.59357 617.074 9.85575 649.147 12.738C648.756 13.1409 648.525 13.7013 648.552 14.3115C648.606 15.4782 649.6 16.3839 650.77 16.3302C657.387 16.0232 661.213 15.6317 662.729 15.2287C663.673 14.9793 664.188 14.5801 664.425 14.3192C665.009 13.6898 665.116 13.0143 665.001 12.3733C664.928 11.9742 664.748 11.5367 664.333 11.1337C664.057 10.8574 663.382 10.4353 662.23 10.1474C649.623 7.01191 541.476 2.45636 505.504 1.8116C410.445 0.115274 315.424 -0.230098 220.475 4.24483ZM511.315 17.3625C492.74 14.8411 470.964 13.9545 448.248 14.0121C459.819 14.6837 471.394 15.34 482.972 15.9541C492.417 16.4568 501.866 16.8867 511.315 17.3625ZM132.865 9.72143C108.495 11.5175 84.1514 13.4595 59.7888 15.6087C56.9757 15.8543 54.1664 16.0961 51.3532 16.334C78.2949 13.0335 105.517 10.9342 132.865 9.72143Z" />
                        </svg>

                    </motion.p>
                </div>
            </motion.div>
            <motion.div className="sm:inline absolute hidden left-25 top-198">
                <div className="relative">
                    <motion.p className="text-3xl text-center text-[#66E9A0] absolute top-1 -left-4.5 font-gaegu font-bold rotate-2">
                        <span className="absolute right-0 -top-8">
                            <svg className="fill-[#66E9A0] " width="30" height="30" viewBox="0 0 80 80" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M94.6785 31.4698C75.9099 66.3698 38.4175 80.5585 3.59528 60.9107C2.43603 60.2565 0.965988 60.6655 0.311743 61.8104C-0.342503 62.9758 0.0664445 64.4478 1.22569 65.1021C38.5504 86.181 78.8049 71.1539 98.9229 33.7597C99.5526 32.5943 99.1131 31.1221 97.9416 30.4883C96.7701 29.8749 95.3082 30.3045 94.6785 31.4698Z" />
                                <path d="M32.8988 45.9428C36.7758 45.9428 39.9187 42.7999 39.9187 38.9229C39.9187 35.0459 36.7758 31.9031 32.8988 31.9031C29.0218 31.9031 25.8789 35.0459 25.8789 38.9229C25.8789 42.7999 29.0218 45.9428 32.8988 45.9428Z" />
                                <path d="M61.9608 38.4754C65.762 38.4754 68.8436 35.394 68.8436 31.5927C68.8436 27.7915 65.762 24.7101 61.9608 24.7101C58.1596 24.7101 55.0781 27.7915 55.0781 31.5927C55.0781 35.394 58.1596 38.4754 61.9608 38.4754Z" />
                            </svg>
                        </span>
                        Just paste things and we will organise it for you.
                        <svg className="fill-[#66E9A0]" width="400" height="42" viewBox="0 0 666 42" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M71.1276 21.6612C59.6626 24.9852 46.4256 28.2932 33.6916 29.1192C22.8076 29.8242 12.2947 28.7292 3.68966 24.0702C2.47666 23.4142 0.95766 23.8652 0.30166 25.0792C-0.35534 26.2922 0.0966552 27.8112 1.30966 28.4682C10.6967 33.5492 22.1426 34.8783 34.0146 34.1082C46.9776 33.2682 60.4536 29.9382 72.1486 26.5662C73.5056 29.3152 76.3157 31.8782 81.2656 33.7692C88.8686 36.6742 99.2496 36.6382 110.186 35.0012C126.047 32.6282 143.109 26.9692 154.079 22.9482C154.529 22.7842 155.199 22.5232 156.019 22.1792C156.269 22.7312 156.549 23.2752 156.859 23.8092C159.549 28.4632 164.309 32.2262 169.159 33.5702C199.919 42.0922 235.819 31.8812 265.049 23.5712C266.369 23.1942 267.139 21.8102 266.769 20.4832C266.389 19.1562 265.009 18.3852 263.679 18.7622C235.269 26.8402 200.389 37.0322 170.489 28.7512C166.809 27.7312 163.229 24.8392 161.189 21.3072C160.959 20.9132 160.759 20.5102 160.569 20.1012C164.599 18.1042 169.339 15.3202 171.889 12.3402C174.509 9.28524 175.159 6.02425 172.879 2.94425C170.919 0.311248 167.949 0.0872439 164.859 1.45224C161.529 2.91424 158.099 6.33219 156.989 7.93619C154.909 10.9322 154.249 14.1822 154.629 17.3512C153.649 17.7652 152.853 18.0732 152.362 18.2532C141.632 22.1852 124.955 27.7352 109.446 30.0562C99.4666 31.5502 89.9876 31.7492 83.0496 29.0992C80.0906 27.9682 78.1356 26.6482 77.0746 25.1162C79.1686 24.4902 81.1877 23.8742 83.1167 23.2862C86.9317 22.1232 94.8746 20.1982 100.55 16.7672C105.063 14.0392 108.123 10.3282 107.945 5.67624C107.854 3.28624 106.471 1.69121 104.27 0.797215C100.981 -0.537785 95.2926 0.108201 93.1746 0.558201C86.7506 1.9202 78.1767 7.55823 73.9347 13.9112C72.2417 16.4462 71.2346 19.0982 71.1276 21.6612ZM76.4046 20.0992C78.2196 19.5532 79.9737 19.0172 81.6587 18.5032C85.2197 17.4172 92.6636 15.6922 97.9626 12.4882C100.769 10.7922 103.06 8.76022 102.949 5.86722C102.94 5.64222 102.717 5.57824 102.52 5.48624C102.215 5.34524 101.866 5.24821 101.494 5.17221C98.9766 4.65821 95.5956 5.15519 94.2116 5.44919C88.8216 6.59219 81.6516 11.3572 78.0926 16.6882C77.3406 17.8142 76.7416 18.9612 76.4046 20.0992ZM159.569 15.0492C161.919 13.8402 164.379 12.3782 166.319 10.7872C167.349 9.9422 168.219 9.07324 168.769 8.17124C169.229 7.42524 169.409 6.66119 168.859 5.92319C168.639 5.62419 168.309 5.61823 167.969 5.67423C167.609 5.73423 167.239 5.8622 166.869 6.02719C164.429 7.10119 161.909 9.6102 161.099 10.7872C160.149 12.1522 159.679 13.5962 159.569 15.0492Z" />

                        </svg>

                    </motion.p>
                </div>
            </motion.div>
            <LandingNav showLandingSections />

            <Header router={router} />

            <Features />
            <About />
            <Pricing router={router} />
            <CallToAction />
            <LandingFooter />
        </motion.div>
    );
}

function Header({ router }: { router: AppRouterInstance }) {
    return (
        <motion.section
            id="home"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 1, delay: 0.5 }}
            className="text-center flex items-center justify-center flex-col h-[720px] sm:h-[900px] mb-15"
        >

            <motion.h1
                initial={{ y: 100, opacity: 0, scale: 0.8 }}
                animate={{ y: 0, opacity: 1, scale: 1 }}
                transition={{
                    duration: 1.2,
                    delay: 0.8,
                    type: "spring",
                    stiffness: 100,
                    damping: 12
                }}
                className="text-[40px] sm:text-[65px] cursor-default font-light "
            >
                <motion.span
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.8, delay: 2 }}
                >
                    The {" "}
                </motion.span>
                <motion.span
                    className="z-10 font-bold moving-gradient font-display tracking-tight"
                >
                    Visions {" "}
                </motion.span>
                <motion.span
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.8, delay: 2 }}
                >
                    Platform.
                </motion.span>
            </motion.h1>
            <motion.h2 className="max-w-[300px] sm:max-w-[700px] text-lg sm:text-2xl text-primary/80 mb-1">
                The best way to tack your ideation.
            </motion.h2>
            <WastedTimeTimer />

            <motion.div
                initial={{ y: 50, opacity: 0 }}
                animate={{ y: 0, opacity: 1 }}
                transition={{
                    duration: 0.8,
                    delay: 1.6,
                    type: "spring",
                    stiffness: 120
                }}
                className="space-y-3 mt-8"
            >
                <div className="relative">
                    <motion.div className="absolute -left-8">
                        {/* Stars */}
                        <motion.div className="absolute -top-3 left-4">
                            <svg className="fill-primary" width="20" height="20" viewBox="0 0 70 70" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M6.74892 23.4418C9.11353 22.5993 11.6019 21.4794 13.5207 19.8582C15.7997 17.9325 16.7266 15.4524 17.349 12.8419C18.1481 9.48791 18.4674 5.91512 19.4363 2.55574C19.7951 1.3082 20.4855 0.836625 20.7818 0.627343C21.5305 0.0987022 22.2874 -0.0426033 22.9995 0.0103967C23.8435 0.0715506 25.0027 0.390888 25.7651 1.80558C25.8738 2.00807 26.0151 2.31657 26.1102 2.73921C26.1795 3.04906 26.2244 4.01799 26.2978 4.41752C26.4812 5.40142 26.6348 6.38535 26.7789 7.37469C27.2586 10.6675 27.5345 13.4642 29.0497 16.4893C31.1059 20.5961 33.1661 23.1089 35.9601 24.2219C38.6618 25.2982 41.892 25.0957 46.0192 24.2518C46.412 24.1567 46.8006 24.0751 47.1852 24.0085C49.0049 23.6905 50.7444 24.8851 51.1018 26.6979C51.4592 28.5095 50.3027 30.2747 48.4994 30.6729C48.123 30.7558 47.7519 30.8346 47.385 30.9067C41.8078 32.2874 35.3513 37.215 31.5991 41.5298C30.4426 42.8602 28.7494 46.5797 27.0221 48.9525C25.7474 50.7028 24.315 51.8566 23.1123 52.2643C22.3065 52.5388 21.627 52.4967 21.0658 52.3581C20.2504 52.157 19.5736 51.7153 19.0545 51.0127C18.7718 50.6281 18.5095 50.113 18.3845 49.4553C18.3247 49.1386 18.3179 48.3342 18.3193 47.97C17.9673 46.7591 17.5365 45.5768 17.2226 44.3551C16.4738 41.4401 15.0047 39.5946 13.2598 37.1566C11.6277 34.8749 9.87464 33.4412 7.30482 32.2969C6.97051 32.2154 4.27294 31.5549 3.32029 31.1757C1.9287 30.6199 1.26549 29.689 1.02495 29.1875C0.6159 28.3368 0.573809 27.5935 0.655347 26.9738C0.776296 26.0592 1.18671 25.2765 1.91512 24.6445C2.3663 24.2518 3.04036 23.8699 3.94272 23.6837C4.63987 23.5383 6.48935 23.4541 6.74892 23.4418ZM22.5742 18.6908C22.6992 18.9694 22.8324 19.2494 22.9737 19.5321C25.9852 25.5469 29.3528 28.9049 33.446 30.5343L33.5833 30.5873C30.8449 32.6203 28.3661 34.8925 26.4717 37.071C25.6917 37.9679 24.6589 39.8311 23.5432 41.7418C22.5294 38.4463 20.8714 36.117 18.7868 33.202C17.194 30.9774 15.5252 29.3031 13.4745 27.9387C15.0659 27.122 16.5838 26.1652 17.9061 25.0482C20.1077 23.1877 21.5631 21.0323 22.5742 18.6908Z" />
                            </svg>
                        </motion.div>
                        <svg className="fill-primary" width="20" height="20" viewBox="0 0 70 70" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M27.7275 13.7946C27.54 12.6821 27.3988 11.5822 27.3075 10.4822C27.17 8.83223 27.255 7.16961 27.2063 5.51961C27.185 4.81961 27.1013 2.99464 27.135 2.73214C27.4413 0.444639 29.2875 0.0945963 29.8275 0.0320963C30.0887 -0.00540372 32.7712 -0.30527 33.35 2.66973C34.06 6.30723 34.2875 9.96968 34.0363 13.5572C34.6225 16.6072 35.625 19.6446 36.9488 22.3946C42.2163 33.3321 52.2537 34.3946 63.1287 34.2946C64.8012 34.2696 66.19 35.5821 66.2775 37.2446C66.365 38.9196 65.12 40.3696 63.455 40.5196C57.3763 41.1071 46.5912 45.9822 42.8625 51.0572C42.0825 52.1197 41.6287 54.6822 41.0287 57.1947C40.1912 60.6822 39.195 64.1322 38.0788 65.5822C37.9113 65.8072 35.875 68.1072 35.2675 68.4447C33.8075 69.2447 32.6388 68.7821 31.975 68.3571C31.3113 67.9321 30.56 67.0946 30.26 65.7071C29.9463 64.2571 30.2113 61.2821 30.1625 60.6446C29.985 58.3321 29.5225 53.7946 28.5788 49.8946C28.07 47.7946 27.5275 45.8571 26.63 44.8946C23.3075 41.3321 17.995 41.8572 13.5213 42.4447C13.0075 42.5072 12.4938 42.5822 11.9813 42.6447C10.16 43.1822 8.22622 43.5821 6.18247 43.8196C3.09622 44.1821 2.58876 41.3446 2.56126 41.1571C2.50376 40.7446 2.28999 38.6197 4.61624 37.7697C4.86999 37.6822 6.74251 37.2696 7.46376 37.1071C8.46876 36.8821 9.48498 36.7072 10.505 36.5447C21.0412 33.2697 26.7638 24.0696 27.7275 13.7946ZM31.3438 25.1572C35.3213 33.3822 41.3575 37.3572 48.5125 39.1572H48.5113C44.0438 41.4947 39.98 44.4197 37.8262 47.3572C37.0087 48.4697 36.2588 50.7072 35.5825 53.2197C35.2163 50.8822 34.7213 48.3946 34.0675 46.2696C33.3238 43.8446 32.3225 41.8322 31.205 40.6322C29.0475 38.3197 26.34 37.0322 23.4287 36.3947C26.9137 33.3072 29.5563 29.4572 31.3438 25.1572Z" />
                        </svg>

                    </motion.div>
                </div>
                <Authenticated>
                    <Button size={"xl"} onClick={() => {
                        router.push("/profile/visions")
                    }}>
                        Your Visions
                    </Button>
                </Authenticated>
                <Unauthenticated>
                    <Button size={"xl"} onClick={() => {
                        router.push("/signup")
                    }}>
                        Join for free
                    </Button>

                </Unauthenticated>
                <div className="relative">
                    <motion.div className="absolute left-20">
                        <svg className="fill-primary" width="130" height="130" viewBox="0 0 130 130" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M69.6566 75.8736C69.5481 75.3104 69.3311 74.7484 69.1141 74.1874C68.1375 71.1589 67.0523 67.627 65.0991 65.0196C62.495 61.6005 59.5655 60.2789 56.6358 60.3082C52.5125 60.3527 48.2811 63.3942 45.677 67.5619C43.0728 71.6917 41.9873 76.8631 43.6149 81.0287C44.7 83.8836 47.0871 86.3196 51.2104 87.6477C55.8762 89.1798 60.325 87.9266 64.2313 85.2258C65.7504 84.2123 67.0523 82.9927 68.3543 81.6494C68.6799 83.417 69.0058 85.2019 69.3313 87.0118C70.1994 92.9374 70.4166 99.1657 70.0911 105.139C69.7656 113.041 68.1373 120.599 65.0991 127.902C64.8821 128.577 65.2078 129.349 65.8589 129.627C66.5099 129.904 67.2691 129.582 67.5946 128.908C70.7413 121.317 72.4782 113.462 72.8038 105.25C73.0208 99.1028 72.9114 92.6944 71.9349 86.5963C71.5008 84.0702 71.067 81.5908 70.5245 79.1396C73.0201 75.9235 74.9735 72.3504 76.1671 69.3122C83.7626 48.9877 73.8888 21.6189 64.1232 3.20197C63.7977 2.55744 63.0375 2.3122 62.3864 2.65291C61.7354 2.99471 61.5184 3.79441 61.8439 4.43894C71.284 22.2645 81.0501 48.7077 73.6716 68.379C72.8036 70.6924 71.3928 73.3475 69.6566 75.8736ZM67.5946 78.5038C67.3776 77.3428 67.0527 76.1893 66.6186 75.0392C65.6421 72.2635 64.7742 69.0018 63.0381 66.6136C61.085 64.0322 58.914 62.9287 56.7439 62.9504C53.2716 62.9862 50.0168 65.6012 47.9552 68.9725C45.7851 72.3807 44.6998 76.6277 46.1104 80.0663C46.9784 82.2798 48.8235 84.106 51.9702 85.1357C55.8764 86.3977 59.565 85.2779 62.7118 83.0524C64.5564 81.8144 66.184 80.2366 67.5946 78.5038Z" />
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M62.8228 3.00067C63.3654 3.3837 63.9079 3.95663 64.4504 4.53063C65.5355 5.63415 66.5123 6.80385 67.3804 7.42017C72.5887 11.2158 78.8819 15.7025 85.0668 17.6926C85.7179 17.9172 86.4774 17.5363 86.6944 16.8418C86.9114 16.1485 86.5861 15.403 85.8266 15.1784C79.9672 13.2687 73.9987 8.92298 68.8988 5.28039C68.0308 4.61416 66.8378 3.20357 65.7527 2.07293C64.7762 1.11372 63.7994 0.348745 62.8228 0.0709669C62.2803 -0.124346 61.3037 0.092664 60.6527 1.31446C59.7846 3.04623 59.0245 7.85527 58.9159 8.32077C57.8309 13.0365 56.746 17.1858 52.6227 20.1632C52.0802 20.5918 51.9719 21.4198 52.2974 22.009C52.7315 22.5982 53.5997 22.7284 54.1423 22.2987C58.8081 18.9046 60.327 14.2572 61.5205 8.88175C61.5205 8.53886 61.9546 5.66451 62.6056 3.66689C62.7141 3.45096 62.7143 3.21335 62.8228 3.00067Z" />
                        </svg>

                    </motion.div>
                </div>
            </motion.div>
        </motion.section>
    );
}

function Features() {
    const features = [
        {
            icon: <Palette className="w-8 h-8" />,
            title: "Visual Canvas",
            description: "Create unlimited nodes on a free-form canvas with drawing tools and connectors.",
        },
        {
            icon: <Video className="w-8 h-8" />,
            title: "Rich Media Support",
            description: "Embed YouTube videos, images, audio, 3D objects, PDFs, and more to capture your vision."
        },
        {
            icon: <Globe className="w-8 h-8" />,
            title: "Platform Integrations",
            description: "Connect with Figma, GitHub, Notion, and websites to pull in your existing work."
        },
        {
            icon: <Zap className="w-8 h-8" />,
            title: "AI Assistant",
            description: "Get help creating your vision and researching ideas with our built-in AI helper."
        },
        {
            icon: <Users className="w-8 h-8" />,
            title: "Real-time Collaboration",
            description: "Work together with team members with live updates and permission controls."
        },
        {
            icon: <Upload className="w-8 h-8" />,
            title: "Export & Share",
            description: "Export your vision maps as JSON or share with read-only access links."
        }
    ];

    return (
        <motion.section
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            id="features"
            className="py-20 px-6"
        >
            <div className="max-w-6xl mx-auto">
                <motion.div
                    initial={{ y: 50, opacity: 0 }}
                    whileInView={{ y: 0, opacity: 1 }}
                    transition={{ duration: 0.6 }}
                    viewport={{ once: true }}
                    className="text-center flex items-center flex-col mb-16"
                >
                    <h2 className="text-5xl font-display font-light mb-4 relative">Features <span className="absolute [background-image:radial-gradient(ellipse_at_bottom,_rgba(192,192,192,0.4)_0%,_rgba(192,192,192,0.2)_30%,_transparent_60%)] dark:hover:[background-image:radial-gradient(ellipse_at_bottom,_rgba(255,255,255,0.3)_0%,_rgba(255,255,255,0.15)_30%,_transparent_60%)] " /> </h2>
                    <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
                        Everything you need to capture, communicate, and collaborate on your vision
                    </p>
                </motion.div>
                <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-15">
                    {features.map((feature, index) => (
                        <motion.div
                            key={feature.title}
                            initial={{ y: 50, opacity: 0 }}
                            whileInView={{ y: 0, opacity: 1 }}
                            transition={{ duration: 0.6, delay: index * 0.1 }}
                            viewport={{ once: true }}
                            className={`group p-2 border-black hover:scale-105 transition-all ease-in-out`}
                        >
                            <div className={`${(index % 2) ? "sm:rotate-0 rotate-180" : ""} text-primary mb-4`}>{feature.icon}</div>
                            <h3 className={`${(index % 2) ? "text-right sm:text-left" : ""} text-2xl font-semibold font-gaegu mb-3`}>{feature.title}</h3>
                            <p className={`${(index % 2) ? "text-right sm:text-left" : ""} group-hover:underline group-hover:text-primary transition-all ease-in-out text-muted-foreground`}>{feature.description}</p>
                        </motion.div>
                    ))}
                </div>
            </div>
        </motion.section>
    );
}

function About() {
    const visionItems = [
        {
            title: "Core Vision",
            content: "As a founder and co-founder of three startups, I've learned that communicating early-stage ideas is both challenging and time-consuming. Vision Maps addresses this challenge by helping you quickly align priors and build shared context."
        },
        {
            title: "What We Do",
            content: "We believe that the only way to truly showcase your ideas is to build them—but building a full product takes time. Vision Maps lets you create that 'idea skeleton' quickly so you can align priors, transform scattered thoughts into coherent narratives, and accelerate the journey from idea to MVP."
        }
    ];

    const featuresItems = [
        {
            title: "Creative Platform Integration",
            content: "Universal paste mechanism and automatic content organization from common platforms (Websites, Figma, GitHub, YouTube, TikTok, Instagram, Spotify, Notion, etc.) with manual override capabilities."
        },
        {
            title: "LLM-Powered Innovation",
            content: "AI-driven brainstorming, vision validation, structured output generation, and usage credit system for scalable AI usage with flexible options for both free and premium users."
        }
    ];

    const brandItems = [
        {
            title: "Brand & Strategic Vision", 
            content: "Vision Maps is more than just a tool—it's a revolutionary way of communicating ideas. Our aim is to build a brand centered around ideation and creative expression that transforms how founders and business owners convey their visions."
        },
        {
            title: "Revolutionary Communication",
            content: "When a founder steps into a VC meeting, they won't be limited to slides; they'll have a dynamic, living Vision Map that speaks to their creative process and demonstrates the full scope of their vision."
        }
    ];

    return (
        <motion.section
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            id="about"
            className="py-20 px-6 bg-background"
        >
            <div className="max-w-6xl mx-auto space-y-16">
                {/* Section 1: Left Quote/Image */}
                <motion.div
                    initial={{ opacity: 0, x: -50 }}
                    whileInView={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.8 }}
                    viewport={{ once: true }}
                    className="grid md:grid-cols-2 gap-12 items-center"
                >
                    <div className="space-y-6">
                        <h3 className="text-3xl font-bold text-primary">
                            "Align priors and share your creative vision faster"
                        </h3>
                        <div className="w-full h-64 bg-muted rounded-lg border-2 border-dashed border-muted-foreground/20 flex items-center justify-center">
                            <div className="text-center space-y-2">
                                <div className="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto">
                                    <Palette className="w-8 h-8 text-primary" />
                                </div>
                                <p className="text-sm text-muted-foreground">Brand Image Placeholder</p>
                            </div>
                        </div>
                    </div>
                    <div className="space-y-4">
                        <Accordion items={visionItems} />
                    </div>
                </motion.div>

                {/* Section 2: Right Accordion */}
                <motion.div
                    initial={{ opacity: 0, x: 50 }}
                    whileInView={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.8 }}
                    viewport={{ once: true }}
                    className="grid md:grid-cols-2 gap-12 items-center"
                >
                    <div className="space-y-4 order-2 md:order-1">
                        <Accordion items={featuresItems} />
                    </div>
                    <div className="space-y-6 order-1 md:order-2">
                        <h3 className="text-3xl font-bold text-primary">
                            "Transform scattered thoughts into a coherent, instantly consumable narrative"
                        </h3>
                        <div className="w-full h-64 bg-muted rounded-lg border-2 border-dashed border-muted-foreground/20 flex items-center justify-center">
                            <div className="text-center space-y-2">
                                <div className="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto">
                                    <Video className="w-8 h-8 text-primary" />
                                </div>
                                <p className="text-sm text-muted-foreground">Product Demo Placeholder</p>
                            </div>
                        </div>
                    </div>
                </motion.div>

                {/* Section 3: Left Accordion */}
                <motion.div
                    initial={{ opacity: 0, x: -50 }}
                    whileInView={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.8 }}
                    viewport={{ once: true }}
                    className="grid md:grid-cols-2 gap-12 items-center"
                >
                    <div className="space-y-6">
                        <h3 className="text-3xl font-bold text-primary">
                            "A dynamic, living Vision Map that speaks to your creative process"
                        </h3>
                        <div className="w-full h-64 bg-muted rounded-lg border-2 border-dashed border-muted-foreground/20 flex items-center justify-center">
                            <div className="text-center space-y-2">
                                <div className="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto">
                                    <Users className="w-8 h-8 text-primary" />
                                </div>
                                <p className="text-sm text-muted-foreground">Team Collaboration Placeholder</p>
                            </div>
                        </div>
                    </div>
                    <div className="space-y-4">
                        <Accordion items={brandItems} />
                    </div>
                </motion.div>

                {/* Use Cases Section */}
                <motion.div
                    initial={{ opacity: 0, y: 50 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.8 }}
                    viewport={{ once: true }}
                    className="text-center space-y-8 pt-16"
                >
                    <h2 className="text-4xl font-display font-light">Use Cases</h2>
                    <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-4xl mx-auto">
                        {[
                            "Explaining the vibe of a product and feel you want to create",
                            "Application flows and user experience mapping", 
                            "General idea management and creative workflows",
                            "A workspace to work with art, fragrances and your own art",
                            "Shooting of a show or movie - reference shots, vibes, lighting, coloring, music",
                            "Pitch presentations that go beyond static slides"
                        ].map((useCase, index) => (
                            <motion.div
                                key={index}
                                initial={{ opacity: 0, y: 20 }}
                                whileInView={{ opacity: 1, y: 0 }}
                                transition={{ duration: 0.6, delay: index * 0.1 }}
                                viewport={{ once: true }}
                                className="p-6 bg-card border rounded-lg hover:shadow-lg transition-shadow"
                            >
                                <div className="flex items-start gap-3">
                                    <CheckCircle className="w-5 h-5 text-green-500 mt-1 flex-shrink-0" />
                                    <p className="text-sm text-muted-foreground text-left">{useCase}</p>
                                </div>
                            </motion.div>
                        ))}
                    </div>
                </motion.div>
            </div>
        </motion.section>
    );
}

function Pricing({ router }: { router: AppRouterInstance }) {
    const [isAnnual, setIsAnnual] = useState(false);
    const [currentIndex, setCurrentIndex] = useState(1);
    const [touchStart, setTouchStart] = useState<number | null>(null);
    const [touchEnd, setTouchEnd] = useState<number | null>(null);
    const { data, isLoading } = usePlans({
        for: 'user',
        pageSize: 3,
    })

    const minSwipeDistance = 50;

    const onTouchStart = (e: React.TouchEvent) => {
        setTouchEnd(null);
        setTouchStart(e.targetTouches[0].clientX);
    };

    const onTouchMove = (e: React.TouchEvent) => setTouchEnd(e.targetTouches[0].clientX);

    const onTouchEnd = () => {
        if (!touchStart || !touchEnd) return;
        const distance = touchStart - touchEnd;
        const isLeftSwipe = distance > minSwipeDistance;
        const isRightSwipe = distance < -minSwipeDistance;

        if (isLeftSwipe && data) {
            nextCard();
        }
        if (isRightSwipe && data) {
            prevCard();
        }
    };

    const nextCard = () => {
        if (!data) return;
        setCurrentIndex((prev) => (prev + 1) % data.length);
    };

    const prevCard = () => {
        if (!data) return;
        setCurrentIndex((prev) => (prev - 1 + data.length) % data.length);
    };



    useEffect(() => {
        if (!data) return;

        const proIndex = data.findIndex(plan => plan.name === "Pro");
        if (proIndex !== -1) {
            setCurrentIndex(proIndex);
        }
    }, [data]);

    if (isLoading) {
        return (
            <motion.section
                initial={{ opacity: 0 }}
                whileInView={{ opacity: 1 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                id="pricing"
                className="py-20 px-6"
            >
                <div className="max-w-6xl mx-auto">
                    <motion.div
                        initial={{ y: 50, opacity: 0 }}
                        whileInView={{ y: 0, opacity: 1 }}
                        transition={{ duration: 0.6 }}
                        viewport={{ once: true }}
                        className="text-center mb-16"
                    >
                        <h2 className="text-5xl font-display font-light mb-4">Pricing</h2>
                        <p className="text-xl text-muted-foreground max-w-2xl mx-auto mb-8">
                            Choose the plan that fits your creative needs
                        </p>
                    </motion.div>

                    <div className="md:grid md:grid-cols-3 md:gap-8">
                        <div className="relative md:hidden h-96 mb-8">
                            {[1, 2, 3].map((i) => (
                                <div key={i} className={`absolute inset-0 border rounded-xl p-8 animate-pulse max-w-xs mx-auto
                                    ${i === 2 ? 'z-30 scale-100 opacity-100' : i === 1 ? 'z-20 scale-95 opacity-60 translate-y-4' : 'z-10 scale-90 opacity-30 translate-y-8'}`}>
                                    <div className="h-6 bg-muted rounded mb-4"></div>
                                    <div className="h-10 bg-muted rounded mb-6"></div>
                                    <div className="space-y-3 mb-8">
                                        {[1, 2, 3, 4].map((j) => (
                                            <div key={j} className="h-4 bg-muted rounded"></div>
                                        ))}
                                    </div>
                                    <div className="h-10 bg-muted rounded"></div>
                                </div>
                            ))}
                        </div>
                        {[1, 2, 3].map((i) => (
                            <div key={i + 'desktop'} className="border rounded-xl p-8 animate-pulse hidden md:block">
                                <div className="h-6 bg-muted rounded mb-4"></div>
                                <div className="h-10 bg-muted rounded mb-6"></div>
                                <div className="space-y-3 mb-8">
                                    {[1, 2, 3, 4].map((j) => (
                                        <div key={j} className="h-4 bg-muted rounded"></div>
                                    ))}
                                </div>
                                <div className="h-10 bg-muted rounded"></div>
                            </div>
                        ))}
                    </div>
                </div>
            </motion.section>
        );
    }

    return (
        <motion.section
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            id="pricing"
            className="pt-20 px-6"
        >
            <div className="max-w-6xl mx-auto">
                <motion.div
                    initial={{ y: 50, opacity: 0 }}
                    whileInView={{ y: 0, opacity: 1 }}
                    transition={{ duration: 0.6 }}
                    viewport={{ once: true }}
                    className="text-center mb-16"
                >
                    <h2 className="text-5xl font-display font-light mb-4">Pricing</h2>
                    <p className="text-xl text-muted-foreground max-w-2xl mx-auto mb-8">
                        Choose the plan that fits your creative needs
                    </p>

                    <motion.div
                        initial={{ opacity: 0, scale: 0.95 }}
                        whileInView={{ opacity: 1, scale: 1 }}
                        transition={{ duration: 0.4, delay: 0.2 }}
                        viewport={{ once: true }}
                        className="flex items-center justify-center gap-4 mb-8"
                    >
                        <span className={`text-sm font-medium ${!isAnnual ? 'text-foreground' : 'text-muted-foreground'}`}>
                            Monthly
                        </span>
                        <button
                            onClick={() => setIsAnnual(!isAnnual)}
                            className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${isAnnual ? 'bg-primary' : 'bg-muted'
                                }`}
                        >
                            <span
                                className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${isAnnual ? 'translate-x-6' : 'translate-x-1'
                                    }`}
                            />
                        </button>
                        <span className={`text-sm font-medium ${isAnnual ? 'text-foreground' : 'text-muted-foreground'}`}>
                            Annual
                        </span>
                    </motion.div>
                </motion.div>

                <div className="md:grid md:grid-cols-3 md:gap-8">
                    <div className="relative md:hidden h-[500px] mb-8">
                        <button
                            onClick={prevCard}
                            className="absolute -left-4 top-1/2 transform -translate-y-1/2 z-40 bg-white dark:bg-background border rounded-full p-2 shadow-lg hover:shadow-xl transition-all"
                        >
                            <ChevronLeft className="w-5 h-5" />
                        </button>
                        <button
                            onClick={nextCard}
                            className="absolute -right-4 top-1/2 transform -translate-y-1/2 z-40 bg-white dark:bg-background border rounded-full p-2 shadow-lg hover:shadow-xl transition-all"
                        >
                            <ChevronRight className="w-5 h-5" />
                        </button>
                        <div
                            className="relative h-full"
                            onTouchStart={onTouchStart}
                            onTouchMove={onTouchMove}
                            onTouchEnd={onTouchEnd}
                        >
                            {data.map((plan, index) => (
                                <motion.div
                                    key={plan.name + index}
                                    initial={{ y: 50, opacity: 0 }}
                                    whileInView={{ y: 0, opacity: 1 }}
                                    transition={{ duration: 0.6, delay: index * 0.1 }}
                                    viewport={{ once: true }}
                                    className={`absolute inset-0 justify-between flex flex-col p-8 rounded-xl  ${plan.name == "Pro" ? "border" : ""}  bg-card transition-all duration-300 cursor-pointer max-w-xs mx-auto
                                ${currentIndex === index
                                            ? 'z-30 scale-100 opacity-100 shadow-2xl border-primary'
                                            : currentIndex === index - 1 || (currentIndex === 0 && index === data.length - 1)
                                                ? 'z-20 scale-95 opacity-60 blur-sm translate-y-4'
                                                : currentIndex === index + 1 || (currentIndex === data.length - 1 && index === 0)
                                                    ? 'z-20 scale-95 opacity-60 blur-sm translate-y-4'
                                                    : 'z-10 scale-90 opacity-30 blur-md translate-y-8'
                                        }
                                ${plan.name == "Pro" && currentIndex === index ? 'border-primary shadow-lg' : ''}`}
                                    onClick={() => setCurrentIndex(index)}
                                >
                                    <div className="space-y-3">
                                        {plan.name == "Pro" && currentIndex === index && (
                                            <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                                                <span className="bg-primary text-primary-foreground px-4 py-1 rounded-full text-sm font-semibold">
                                                    Most Popular
                                                </span>
                                            </div>
                                        )}

                                        <div className="text-center">
                                            <h3 className="text-2xl font-semibold mb-2">{plan.name}</h3>
                                            <div className="mb-2">
                                                <div className="flex items-center justify-center gap-2">
                                                    <span className="text-4xl font-bold">{isAnnual ? plan.annualFee.amountFormatted : plan.fee.amountFormatted}</span>
                                                    <span className="text-muted-foreground">{isAnnual ? "Yearly" : "Monthly"}</span>
                                                </div>
                                                {isAnnual && plan.name !== "Free" && (
                                                    <p className="text-xs text-muted-foreground mt-2">
                                                        {`(${plan.annualMonthlyFee.amountFormatted}/month billed annually)`}
                                                    </p>
                                                )}
                                            </div>
                                            <p className="text-muted-foreground text-xs">{plan.description}</p>
                                        </div>
                                        <hr />
                                        <div className="space-y-4 mb-8  overflow-y-auto">
                                            {plan.features.map((feature) => (
                                                <div key={feature.slug} className="flex items-center gap-3">
                                                    <CheckCircle className="w-5 h-5 text-green-500 flex-shrink-0" />
                                                    <span className="text-sm">{feature.name}</span>
                                                </div>
                                            ))}
                                        </div>
                                    </div>

                                    {plan.name != "Free" && (
                                        <>

                                            <SignedIn>
                                                <CheckoutButton planId={plan.id} planPeriod={isAnnual ? "annual" : "month"} >
                                                    <Button
                                                        className={`w-full ${plan.name == "Pro" ? 'bg-primary hover:bg-primary/90' : ''}`}
                                                        variant={plan.name == "Pro" ? 'default' : 'outline'}
                                                        size="lg"
                                                    >
                                                        Subscribe to {plan.name}
                                                    </Button>
                                                </CheckoutButton>
                                            </SignedIn>
                                            <Unauthenticated>
                                                <Button
                                                    className={`w-full ${plan.name == "Pro" ? 'bg-primary hover:bg-primary/90' : ''}`}
                                                    variant={plan.name == "Pro" ? 'default' : 'outline'}
                                                    size="lg"
                                                    onClick={() => {
                                                        if (plan.id && plan.name !== 'Free') {
                                                            router.push("/signup")
                                                        }
                                                    }}
                                                >
                                                    Subscribe to {plan.name}
                                                </Button>
                                            </Unauthenticated>
                                        </>
                                    )}
                                </motion.div>
                            ))}
                        </div>
                    </div>

                    {data.map((plan, index) => (
                        <motion.div
                            key={plan.name + index + 'desktop'}
                            initial={{ y: 50, opacity: 0 }}
                            whileInView={{ y: 0, opacity: 1 }}
                            transition={{ duration: 0.6, delay: index * 0.1 }}
                            viewport={{ once: true }}
                            className={`relative justify-between flex-col p-8 rounded-xl border bg-card hover:shadow-lg transition-all hidden md:flex
                            ${plan.name == "Pro" ? 'border-primary shadow-lg scale-105' : ''}`}
                        >
                            <div className="space-y-3">
                                {plan.name == "Pro" && (
                                    <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                                        <span className="bg-primary text-primary-foreground px-4 py-1 rounded-full text-sm font-semibold">
                                            Most Popular
                                        </span>
                                    </div>
                                )}

                                <div className="text-center">
                                    <h3 className="text-2xl font-semibold mb-2">{plan.name}</h3>
                                    <div className="mb-2">
                                        <div className="flex items-center justify-center gap-2">
                                            <span className="text-4xl font-bold">{isAnnual ? plan.annualFee.amountFormatted : plan.fee.amountFormatted}</span>
                                            <span className="text-muted-foreground">{isAnnual ? "Yearly" : "Monthly"}</span>
                                        </div>
                                        {isAnnual && plan.name !== "Free" && (
                                            <p className="text-xs text-muted-foreground mt-2">
                                                {`(${plan.annualMonthlyFee.amountFormatted}/month billed annually)`}
                                            </p>
                                        )}
                                    </div>
                                    <p className="text-muted-foreground text-xs">{plan.description}</p>
                                </div>
                                <hr />
                                <div className="space-y-4 mb-8">
                                    {plan.features.map((feature) => (
                                        <div key={feature.slug} className="flex items-center gap-3">
                                            <CheckCircle className="w-5 h-5 text-green-500 flex-shrink-0" />
                                            <span>{feature.name}</span>
                                        </div>
                                    ))}
                                </div>
                            </div>


                            {plan.name != "Free" && (
                                <>
                                    <SignedIn>
                                        <CheckoutButton planId={plan.id} planPeriod={isAnnual ? "annual" : "month"} >
                                            <Button
                                                className={`w-full ${plan.name == "Pro" ? 'bg-primary hover:bg-primary/90' : ''}`}
                                                variant={plan.name == "Pro" ? 'default' : 'outline'}
                                                size="lg"
                                            >
                                                Subscribe to {plan.name}
                                            </Button>
                                        </CheckoutButton>
                                    </SignedIn>
                                    <Unauthenticated>
                                        <Button
                                            className={`w-full ${plan.name == "Pro" ? 'bg-primary hover:bg-primary/90' : ''}`}
                                            variant={plan.name == "Pro" ? 'default' : 'outline'}
                                            size="lg"
                                            onClick={() => {
                                                if (plan.id && plan.name !== 'Free') {
                                                    router.push("/signup")
                                                }
                                            }}
                                        >
                                            Subscribe to {plan.name}
                                        </Button>
                                    </Unauthenticated>
                                </>
                            )}
                        </motion.div>
                    ))}
                </div>

                <div className="flex justify-center mt-8 gap-2 md:hidden">
                    {data.map((_, index) => (
                        <button
                            key={index}
                            onClick={() => setCurrentIndex(index)}
                            className={`w-2 h-2 rounded-full transition-all ${currentIndex === index ? 'bg-primary' : 'bg-muted'
                                }`}
                        />
                    ))}
                </div>
            </div>
        </motion.section >
    );
}

function CallToAction() {
    return (
        <motion.section
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="py-20 mt-10 px-6 bg-gradient-to-r from-primary/5 to-primary/10"
        >
            <div className="max-w-4xl mx-auto text-center">
                <motion.div
                    initial={{ y: 50, opacity: 0 }}
                    whileInView={{ y: 0, opacity: 1 }}
                    transition={{ duration: 0.6 }}
                    viewport={{ once: true }}
                    className="space-y-8"
                >
                    <h2 className="text-5xl md:text-6xl font-display font-light">
                        <span className="text-muted-foreground">Build clearer—</span>
                        <br />
                        <span className="text-primary font-semibold">with Vision Maps</span>
                    </h2>
                    
                    <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
                        Ready to transform how you communicate your ideas?
                    </p>
                    
                    <motion.div
                        initial={{ y: 20, opacity: 0 }}
                        whileInView={{ y: 0, opacity: 1 }}
                        transition={{ duration: 0.6, delay: 0.2 }}
                        viewport={{ once: true }}
                        className="flex flex-col sm:flex-row gap-4 justify-center items-center"
                    >
                        <Authenticated>
                            <Button size="xl" className="w-full sm:w-auto" onClick={() => window.location.href = "/profile/visions"}>
                                Start Creating
                            </Button>
                        </Authenticated>
                        <Unauthenticated>
                            <Button size="xl" className="w-full sm:w-auto" onClick={() => window.location.href = "/signup"}>
                                Get Started Free
                            </Button>
                        </Unauthenticated>
                        
                        <div className="flex items-center gap-2 text-sm text-muted-foreground">
                            <span>Contact us:</span>
                            <a 
                                href="mailto:support@visionmaps.com" 
                                className="text-primary hover:underline font-medium"
                            >
                                support@visionmaps.com
                            </a>
                        </div>
                    </motion.div>
                    
                    <motion.div
                        initial={{ scale: 0.8, opacity: 0 }}
                        whileInView={{ scale: 1, opacity: 1 }}
                        transition={{ duration: 0.6, delay: 0.4 }}
                        viewport={{ once: true }}
                        className="pt-8"
                    >
                        <div className="flex items-center justify-center gap-8 text-sm text-muted-foreground">
                            <div className="flex items-center gap-2">
                                <CheckCircle className="w-4 h-4 text-green-500" />
                                <span>Free forever plan</span>
                            </div>
                            <div className="flex items-center gap-2">
                                <CheckCircle className="w-4 h-4 text-green-500" />
                                <span>No credit card required</span>
                            </div>
                            <div className="flex items-center gap-2">
                                <CheckCircle className="w-4 h-4 text-green-500" />
                                <span>Start in seconds</span>
                            </div>
                        </div>
                    </motion.div>
                </motion.div>
            </div>
        </motion.section>
    );
}
